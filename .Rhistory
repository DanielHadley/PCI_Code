user='arussell',
password='Master0',
dologin="Login")
#### Analysis of the Assessors Data by Daniel Hadley ####
# 10/14
#### Notes from Marc ####
# Hi Daniel and thanks again for your analysis.  While I still think a face to face would be better, please note the following:
#
#   Do not use the word growth as "growth" has a very specific meaning in the Mass. General Laws and is defined as valuation increase due to improvements made to properties, additional value from subdivisions, added value from condo conversions, or additional value from infrastructure improvements (ie. Roadway and drainage improvements at Assembly).  Growth is exempt from the limits of proposition 2 1/2 and allows the City to raise additional tax dollars if available and needed.  Valuation increases depicted in the graphics should be identified as "changes."  As explained last year, it is important to remember that the charts include all changes both from growth and market appreciation.
#
# The graph showing changes by ward and precinct are a little too busy, (I think) and do not correspond to our "neighborhood assessment districts."  It may give the impression that assessments are based on the former and not the latter (but is still useful if explained).
#
# The chart showing changes by Property type give the impression that vacant residential land (res aclnud) increased by 15%.  In fact vacant residential land had a market appreciation (increase) of 8.8%. The pure, market change numbers can be found on State form LA-13 which shows our growth (the final numbers are not available in the Vision data base) but I can review with you.  The fact is that there were a handful of properties with improvements that were demolished and reverted to vacant residential land.  With that additional vacant land added into this category, it gives the impression that vacant land values have increased much faster than other uses.  There are always a lot of nuances like this that better explain the story behind the numbers (but you couldn't possibly be expected to know that).
#
# Showing property changes by zoning districts is fine as long as it is explained that the Assessors value based upon current use not zoning.  In other words, a 3 family in a business zoned is valued as a residential property.  Zoning is considered when we value vacant land but not otherwise.
#
# I like the bar graph that shows number of properties by percent change.  It nicely and graphically shows how most are clustered to the middle or average change.
#
# This is where you came in and we reviewed face to face.
#
# Thanks again.
#### Load data ####
setwd("k:/Somerstat/Common/Data/2015_AssessorsData/")
twelve <- read.csv("./RawData/REMERGE_FY2012.txt", sep="|")
thirteen <- read.csv("./RawData/REMERGE_FY2013.txt", sep="|")
fourteen <- read.csv("./RawData/REMERGE_FY2014.TXT", sep="|")
fifteen <- read.csv("./RawData/REMERGE_FY2015_Current_value.csv", sep=",")
#### Creates a percent change column ####
myvars <- c("PARCEL.ID", "PARCEL.VAL")
thirteenVal <- thirteen[myvars]
fourteenVal <- fourteen[myvars]
fifteenVal <- fifteen[myvars]
allVal <- merge(thirteenVal, fourteenVal, by="PARCEL.ID")
# I leave all=TRUE out here. There are 83 records from 13 that are missing the parcel ID. I may try to bring everything together
# Using a map, block, lot, unit aggregation
names(allVal)[2] <- "ThrtnVal"
names(allVal)[3] <- "FrtnVal"
allValFinal <- merge(allVal, fifteenVal, by='PARCEL.ID', all=TRUE)
names(allValFinal)[4] <- "FftnVal"
d <- merge(fifteen, allValFinal, by='PARCEL.ID')
remove(myvars, thirteenVal, fourteenVal, fifteenVal, allVal, allValFinal)
remove(twelve, thirteen, fourteen, fifteen)
#### Add variables ####
# Why is gross area larger than SQFT???
#Must do this before it's atomized to get the other years
d$FftnValPerSF <- d$FftnVal/d$SQFT
d$ChngThrtnToFrtn <- (d$FrtnVal - d$ThrtnVal)
d$PerChngThrtnToFrtn <- (d$FrtnVal - d$ThrtnVal)/d$ThrtnVal
d$ChngFrtnToFftn <- (d$FftnVal - d$FrtnVal)
d$PerChngFrtnToFftn <- (d$FftnVal - d$FrtnVal)/d$FrtnVal
d$ChngThrtnToFftn <- (d$FftnVal - d$ThrtnVal)
d$PerChngThrtnToFftn <- (d$FftnVal - d$ThrtnVal)/d$FftnVal
d$FullAddrss <- paste(d$HOUSE.NO, " ", d$STREET, ", Somerville, MA", sep="")
d$WardPrecinct <- paste("Ward ", d$WARD, " Precinct ", d$PRECINCT, sep="")
# Fix mistake in Transit zone went up a lot. Where are those?
d$ZONE.DESP[d$ZONE.DESP == "TRANSIT"] <- "TRANSIT OR"
d$MBL <- paste(d$MAP, d$BLOCK, d$LOT, sep="-")
## Rename other observations
# Use this since PCC.D is a factor
levels(d$PCC.DESCRIPT) <- sub("^RES ACLNUD$", "RES VACANT", levels(d$PCC.DESCRIPT))
levels(d$PCC.DESCRIPT) <- sub("^CONDO  MDL-$", "CONDO  MDL", levels(d$PCC.DESCRIPT)) # Assuming "-" is not significant
# MAke a residential column
d$code <- substr(d$PCC, 1,2)
d$Residential <- ifelse(d$code == "10", "Residential",
ifelse(d$code == "01", "Residential",
ifelse(d$code == "11", "Residential",
ifelse(d$code == "13", "Residential",
"Other"))))
d <- subset(d, select = -c(code)) #OR
res <- d[which(d$Residential == "Residential"),]
#### Start analysis ####
summary(d$PerChngFrtnToFftn)
summary(d$PerChengThrtnToFftn)
fewOutliers <- d[which(d$PerChngFrtnToFftn < .4 & d$PerChngFrtnToFftn > -.05),]
hist(fewOutliers$PerChngFrtnToFftn)
# Weird distribution because of 0s. Let's look at those
# Zeroes <- d[which(d$PerChngFrtnToFftn == 0),]
fewOutliersTwo <- d[which(d$PerChngThrtnToFftn < .5 & d$PerChngThrtnToFftn > -.1),]
hist(fewOutliersTwo$PerChngThrtnToFftn)
# sorted <- d[order(d$PerChngFrtnToFftn),]
# a few tables
aggregate(d$PerChngThrtnToFftn ~ d$WARD, d, mean )
aggregate(d$PerChngThrtnToFftn ~ d$STYLE.DESCRIP, d, mean )
aggregate(d$PerChngThrtnToFftn ~ d$PCC.DESCRIPT, d, mean )
aggregate(d$PerChngThrtnToFftn ~ d$ZONE.DESP, d, mean)
library(plyr)
d.top <- subset(d, PCC.DESCRIPT %in% arrange(count(d, .(PCC.DESCRIPT)), desc(freq))[1:10,]$PCC.DESCRIPT)
aggregate(d.top$PerChngThrtnToFftn ~ d.top$PCC.DESCRIPT, d.top, mean )
#### Now let's make some charts ####
library(plyr)
library(ggplot2)
library(scales) # for changing from scientific notation
# Example scale feature: scale_y_continuous(labels = comma) or scale_y_continuous(labels = dollar)
library(reshape2)
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
#,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
ggplot(fewOutliersTwo, aes(x=fewOutliersTwo$PerChngThrtnToFftn)) + geom_histogram(binwidth=.03, colour="white", fill=nice_blue) +
my.theme + ggtitle("Property Value Change") + xlab("Percent Change FY13 - FY15")+ylab("Number of Properties") +
scale_x_continuous(labels = percent)
zone <- ddply(d, "ZONE.DESP", summarise, mchange = mean(PerChngThrtnToFftn, na.rm = TRUE))
zone <- zone[-1,]
ggplot(zone, aes(x=zone$ZONE.DESP, y=zone$mchange)) + geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle("Property Value Change") + xlab("Zone")+ylab("Percent Change FY13 - FY15") +
theme(axis.text.x = element_text(angle=60, hjust = 1)) + scale_y_continuous(labels = percent)
ward <- ddply(d, "WARD", summarise, mchange = mean(PerChngThrtnToFftn, na.rm = TRUE))
ward <- ward[3:9,]
ggplot(ward, aes(x=ward$WARD, y=ward$mchange)) + geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle("Property Value Change") + xlab("ward")+ylab("Percent Change FY13 - FY15") +
scale_y_continuous(labels = percent)
View(ward)
ward <- ddply(d, "WardPrecinct", summarise, mchange = mean(PerChngThrtnToFftn, na.rm = TRUE))
ward <- ward[4:29,]
ward <- ward[-8,]
ward <- ward[-11:-12,]
ggplot(ward, aes(x=ward$WardPrecinct, y=ward$mchange)) + geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle("Property Value Change") + xlab("ward/precinct")+ylab("Percent Change FY13 - FY15") +
theme(axis.text.x = element_text(angle=60, hjust = 1)) + scale_y_continuous(labels = percent)
View(ward)
View(d)
# Import data ####
setwd("C:/Users/dhadley/Documents/GitHub/PCI_Code")
setwd ("~/Documents/Git/PCI_Code") #at home
library(plyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(reshape2)
# Maping tools
require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
require("RColorBrewer")
require("ggmap")
install.packages('maptools')
mass <- readOGR(dsn="./2015_Shapefile", layer="BL_SEGMENTS_2015")
install.packages('rgdal')
library(plyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(reshape2)
# Maping tools
require("rgdal") # requires sp, will use proj.4 if installed
require("maptools")
require("ggplot2")
require("plyr")
require("RColorBrewer")
require("ggmap")
mass <- readOGR(dsn="./2015_Shapefile", layer="BL_SEGMENTS_2015")
mass@data$id = rownames(mass@data)
names(mass)
mass.points <- fortify(mass, region="id")
mass.df <- join(mass.points, mass@data, by="id")
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=10, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, fill=mass.df[,i]), colour=NA, alpha=0.7)
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7)
)
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7)
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7))
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7))
View(mass.df)
View(mass.points)
plot(mass, border="red", lwd=3)
ggmap(mass)
ggmap(map) + plot(mass)
ggmap(map) +
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7))
traceback()
mass
mass <- readOGR(dsn="./2015_Shapefile", layer="BL_SEGMENTS_2015")
shp       <- spTransform(mass, CRS("+proj=longlat +datum=WGS84"))
shp.df    <- data.frame(id=rownames(shp@data),
values=sample(1:10,length(shp),replace=T),
shp@data, stringsAsFactors=F)
data_fort   <- fortify(shp)
data_merged <- join(data_fort, shp.df, by="id")
ggmap(get_map(unlist(geocode("Somerville, MA")),zoom=11))+
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=factor(values)))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
ggmap(get_map(unlist(geocode("Somerville, MA")),zoom=13))+
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=factor(values)))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
map <- get_map(location = "Somerville, Massachusetts", zoom=10, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=factor(values)))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7))
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=factor(values)))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
geom_polygon(data=mass.df, aes(x=long, y=lat, group=group, colour=NA, alpha=0.7))
View(shp.df)
View(data_merged)
map <- get_map(location = "Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=15, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=1,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=15, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
map <- get_map(location = "Somerville, Massachusetts", zoom=15, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
scale_fill_gradientn(colours=(brewer.pal(9,"YlGnBu")),labels=percent) +
theme(axis.text=element_blank(),axis.ticks=element_blank())
require("RColorBrewer")
map <- get_map(location = "Somerville, Massachusetts", zoom=15, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
scale_fill_gradientn(colours=(brewer.pal(9,"YlGnBu")),labels=percent) +
theme(axis.text=element_blank(),axis.ticks=element_blank())
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
map <- get_map(location = "Somerville, Massachusetts", zoom=15, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_manual(values=rainbow_hcl(7))
scale_colour_manual(values=c("8" = "red",
"4" = "blue","6" = "green“)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_manual(values=rainbow_hcl(7))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_manual(values=rainbow_hcl(7))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_manual(values=c("8" = "red",
"4" = "blue","6" = "green“))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_fill_continuous(low="blue", high="hotpink")
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank())+
scale_fill_brewer(palette = "PuRd")
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_solor_gradient(low='green',high='red')
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient(low='green',high='red')
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient(colours=c("red","violet","blue"))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient(colors=c("red","violet","blue"))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient(colours=c("red","violet","blue"))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient2(low='red', mid='violet', high='red')
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient2(low='red', mid='violet', high='blue')
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_color_gradient2(low='blue', mid='violet', high='red')
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours = c("red","yellow","green","lightblue","darkblue"),
values=c(1,20,40,60,80,100))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours = c("red","yellow","green","lightblue","darkblue"))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours = c("#E1FA72","#F46FEE"))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=(brewer.pal(9,"YlGnBu")))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=(brewer.pal(9,"YlGnBu")))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=(brewer.pal(9,-"YlGnBu")))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=13, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.8))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.2))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.2))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.2))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.1))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
View(shp.df)
d <- read.csv("./PCI.R")
d <- read.csv("./PCI.csv")
View(d)
View(shp.df)
test <- shp.df  %>%
arrange(STREETNAME)
library(dplyr)
test <- shp.df  %>%
arrange(STREETNAME)
View(test)
test2 <- d  %>%
arrange(STREETNAME)
View(test)
View(test2)
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
# Map
map <- get_map(location = "Highland and Lowell St, Somerville, Massachusetts", zoom=14, maptype="roadmap", color = "bw")
ggmap(map)
ggmap(map) +
geom_path(data=data_merged,size=2,
aes(x=long,y=lat,group=group,color=OCI, alpha=.9))+
labs(x="",y="")+
theme(axis.text=element_blank(),axis.ticks=element_blank()) +
scale_colour_gradientn(colours=rev(brewer.pal(9,"YlGnBu")))
